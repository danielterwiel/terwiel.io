import type { Project, StackItem, StackName } from "~/types";

import { generateStackUrl } from "~/utils/generate-stack-url";
import { STACK } from "./stack";

function createStackItem(name: StackName): StackItem {
  const stackConfig = STACK[name];
  const parent = "parent" in stackConfig ? stackConfig?.parent : undefined;
  return {
    name,
    parent,
    domain: stackConfig.domain,
    icon: stackConfig.icon,
    url: generateStackUrl(parent ?? name),
  };
}

export const PROJECTS: Project[] = [
  {
    id: "PROJECT_10",
    company: "90 Percent of Everything",
    role: "Front-end Developer",
    teamSize: 100,
    industry: "Logistics",
    location: "London (Remote)",
    dateFrom: "2024-02-01",
    dateTo: "2025-12-31",
    description:
      "90POE builds maritime logistics software (OpenOcean STUDIO), so the logistics focus matches. I built and maintained several CRUD apps inside their micro-frontend setup, aligning APIs and shared UI components to avoid regressions and speed up releases. That helped teams ship new features used in daily vessel and operations workflows more quickly.",
    stack: [
      createStackItem("JavaScript"),
      createStackItem("TypeScript"),
      createStackItem("React"),
      createStackItem("AntDesign"),
      createStackItem("GraphQL"),
      createStackItem("Figma"),
    ],
    icon: "Ship",
  },
  {
    id: "PROJECT_9",
    company: "Currentflow",
    role: "Full stack Developer",
    teamSize: 1,
    industry: "Auditing",
    location: "Home",
    dateFrom: "2025-07-01",
    dateTo: "present",
    description:
      "In my spare time, Iâ€™m building a containerized QMS in my spare time, using Effect as standard library, Electric SQL for sync, and TanStack DB for offline storage. The aim is a maintainable, real-time, offline-first app with type-safe data and side effects end to end.",
    stack: [
      createStackItem("Effect"),
      createStackItem("JavaScript"),
      createStackItem("GitHub Actions"),
      createStackItem("Tanstack Start"),
      createStackItem("Tanstack Router"),
      createStackItem("Tanstack DB"),
      createStackItem("Docker"),
      createStackItem("Bash"),
      createStackItem("TypeScript"),
      createStackItem("React"),
      createStackItem("Tailwind"),
      createStackItem("XState"),
    ],
    icon: "Ripple",
  },
  {
    id: "PROJECT_8",
    company: "Permatrust",
    role: "Full stack Developer",
    teamSize: 1,
    industry: "Auditing",
    location: "Home",
    dateFrom: "2024-06-01",
    dateTo: "2025-06-01",
    description:
      "In my spare time, I prototyped a ransomware-resilient QMS using Rust for memory safety and XState for predictable logic, deployed on Internet Computer. The result is a secure, minimal prototype that is highly data resilient and abides by GxP regulations.",
    stack: [
      createStackItem("Rust"),
      createStackItem("Bash"),
      createStackItem("GitHub Actions"),
      createStackItem("JavaScript"),
      createStackItem("Tanstack Router"),
      createStackItem("Tanstack Query"),
      createStackItem("TypeScript"),
      createStackItem("React"),
      createStackItem("Tailwind"),
      createStackItem("XState"),
    ],
    icon: "ShieldLock",
  },
  {
    id: "PROJECT_7",
    company: "Departure Labs",
    role: "Full stack Developer & Designer",
    teamSize: 5,
    industry: "Finance & Developer tools",
    location: "Boston (Remote)",
    dateFrom: "2022-02-01",
    dateTo: "2023-09-30",
    description:
      "Departure Labs shifted to a cloud platform built on WASM. I built the Rust CLI and release pipeline for that. Furthermore I guided a small front-end group across Vue and React, and contributed to product design. We moved the platform from concept to a shippable product.",
    stack: [
      createStackItem("Rust"),
      createStackItem("GitHub Actions"),
      createStackItem("JavaScript"),
      createStackItem("TypeScript"),
      createStackItem("Vue"),
      createStackItem("React"),
      createStackItem("Next"),
      createStackItem("Tailwind"),
      createStackItem("Vite"),
      createStackItem("Vitest"),
      createStackItem("HTML"),
      createStackItem("Figma"),
    ],
    icon: "Rocket",
  },
  {
    id: "PROJECT_6",
    company: "ING",
    role: "Senior Front-end Developer",
    teamSize: 200,
    industry: "Finance",
    location: "Amsterdam (Remote)",
    dateFrom: "2021-06-01",
    dateTo: "2022-01-31",
    description:
      "ING needed consistent authentication and faster project setup across many teams. I improved authentication flows and built a bootstrap tool that spins up new projects with platform standards baked in. This cut setup time and kept apps aligned with security and UI rules.",
    stack: [
      createStackItem("JavaScript"),
      createStackItem("Lit"),
      createStackItem("JSDoc"),
      createStackItem("Mocha"),
      createStackItem("CSS"),
      createStackItem("HTML"),
    ],
    icon: "BuildingBank",
  },
  {
    id: "PROJECT_5",
    company: "M&I",
    role: "Senior Front-end Developer",
    teamSize: 4,
    industry: "Media & Publishing",
    location: "Hilversum (Hybrid)",
    dateFrom: "2020-06-01",
    dateTo: "2021-05-31",
    description:
      "Here I was tasked to create a video editor. Furthermore, I helped modernize a complex newsroom app used by major broadcasters. I replaced brittle parts with React, added a test suite, and used Tailwind to move the new design system faster.",
    stack: [
      createStackItem("React"),
      createStackItem("Redux"),
      createStackItem("JavaScript"),
      createStackItem("Webpack"),
      createStackItem("Jest"),
      createStackItem("Puppeteer"),
      createStackItem("Tailwind"),
      createStackItem("CSS"),
      createStackItem("HTML"),
    ],
    icon: "News",
  },
  {
    id: "PROJECT_4",
    company: "Sendcloud",
    role: "Senior Front-end Developer",
    teamSize: 40,
    industry: "Logistics",
    location: "Eindhoven/Remote",
    dateFrom: "2019-02-01",
    dateTo: "2020-06-01",
    description:
      "At Sendcloud, I replaced legacy front-end sections with Vue, contributed to the design system, and co-built the consumer returns portal. The portal handles high traffic across Europe, and the design system made UI work more consistent across teams.",
    stack: [
      createStackItem("Vue"),
      createStackItem("Preact"),
      createStackItem("Webpack"),
      createStackItem("Jest"),
      createStackItem("JavaScript"),
      createStackItem("CSS"),
      createStackItem("HTML"),
    ],
    icon: "Package",
  },
  {
    id: "PROJECT_3",
    company: "Iperion",
    role: "Front-end Developer",
    teamSize: 5,
    industry: "Life Sciences",
    location: "Vlijmen",
    dateFrom: "2016-06-01",
    dateTo: "2019-01-31",
    description:
      "I worked on the front-end architecture for a greenfield GxP compliant Cloud platform in life sciences. Using React and Redux, we mapped regulatory requirements to UI and state that auditors and end users could actually use. We shipped a compliant product that stayed usable.",
    stack: [
      createStackItem("React"),
      createStackItem("Redux"),
      createStackItem("Redux-saga"),
      createStackItem("Flow"),
      createStackItem("Jest"),
      createStackItem("Webpack"),
      createStackItem("Material UI"),
      createStackItem("JavaScript"),
      createStackItem("SCSS"),
      createStackItem("HTML"),
    ],
    icon: "HealthRecognition",
  },
  {
    id: "PROJECT_2",
    company: "Amadeus",
    role: "Front-end Developer",
    teamSize: 30,
    industry: "Hospitality",
    location: "Breda",
    dateFrom: "2015-03-01",
    dateTo: "2019-01-31",
    description:
      "The large-scale ELS app lacked a consistent architecture, which slowed feature work and made maintenance hard. I was asked to build new features and introduce a standard to improve code quality and developer flow. I applied MVVM to separate UI from business logic and added a simple component-based approach to encourage reuse and consistent view logic. This made the features I delivered more organized, maintainable, and testable, and it nudged the team toward more component-driven development.",
    stack: [
      createStackItem("Knockout"),
      createStackItem("JavaScript"),
      createStackItem("CSS"),
      createStackItem("HTML"),
    ],
    icon: "HotelService",
  },
  {
    id: "PROJECT_1",
    company: "Dinto",
    role: "Front-end Developer",
    teamSize: 6,
    industry: "Logistics",
    location: "Breda",
    dateFrom: "2013-10-01",
    dateTo: "2014-10-31",
    description:
      "I built an interactive warehouse layout tool with SVG and JavaScript backed by SQL for real-time updates on the current stock of that warehouse. It provided a more efficient and accurate way to manage inventory. Furthermore I built software for handheld devices for order picking.",
    stack: [
      createStackItem("JavaScript"),
      createStackItem("CSS"),
      createStackItem("HTML"),
      createStackItem("SVG"),
      createStackItem("SQL"),
    ],
    icon: "BuildingWarehouse",
  },
  {
    id: "PROJECT_0",
    company: "Finview",
    role: "Full stack Developer",
    teamSize: 2,
    industry: "Finance",
    location: "Breda",
    dateFrom: "2007-01-01",
    dateTo: "2013-06-30",
    description:
      "I co-built an internal CRM and client websites for a financial advisor. It streamlined and automated daily work and kept client data in one place.",
    stack: [
      createStackItem("Visual Basic.NET"),
      createStackItem("SQL Server"),
      createStackItem("PHP"),
      createStackItem("JavaScript"),
      createStackItem("CSS"),
      createStackItem("HTML"),
    ],
    icon: "HeartHandshake",
  },
];
