@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html,
  body {
    /* Ensure white background prevents animations from showing through on mobile */
    background-color: white;
  }

  html {
    /* Prevent header movement on overscroll/bounce */
    overscroll-behavior: none;
    /* Make scrollbar track transparent while keeping the thumb visible */
    scrollbar-color: oklch(37.85% 0.1954 263.23 / 0.5) transparent;
  }

  /* Modern Glassmorphism Header - 2025 Design */
  .glass-header {
    /* Highly transparent frosted glass for maximum see-through effect */
    background: linear-gradient(
      135deg,
      oklch(100% 0 0 / 0.35),
      oklch(98% 0.002 240 / 0.28)
    );
    /* Strong blur for true glassmorphism with enhanced brightness and saturation */
    backdrop-filter: blur(20px) brightness(1.12) saturate(1.15) contrast(1.05);
    -webkit-backdrop-filter: blur(20px) brightness(1.12) saturate(1.15)
      contrast(1.05);
    /* Subtle border for definition without heaviness */
    border-bottom: 1px solid oklch(100% 0 0 / 0.25);
    /* Layered shadow for depth: outer glow + inner highlight */
    box-shadow:
      0 12px 32px oklch(37.85% 0.1954 263.23 / 0.15),
      inset 0 1px 1px oklch(100% 0 0 / 0.5);
  }

  /* Desktop header content with splashy glassmorphic effect */
  .glass-header-content {
    background: linear-gradient(
      135deg,
      oklch(100% 0 0 / 0.65),
      oklch(98% 0.002 240 / 0.58)
    );
    backdrop-filter: blur(18px) brightness(1.08) saturate(1.1);
    -webkit-backdrop-filter: blur(18px) brightness(1.08) saturate(1.1);
  }

  /* Webkit browsers (Chrome, Safari, Edge) */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: transparent;
  }

  ::-webkit-scrollbar-thumb {
    background: oklch(37.85% 0.1954 263.23 / 0.5);
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: oklch(37.85% 0.1954 263.23 / 0.7);
  }
}

@layer components {
  /* Mobile menu - ensure dropdown is visible above StackCloud */
  .relative.z-50 {
    /* Don't hide overflow for dropdowns inside z-50 container */
  }

  /* Remove default focus outline from SVG interactive elements */
  svg [role="button"]:focus {
    outline: none;
  }

  .icon-container {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    overflow: hidden;
  }

  .icon-container svg {
    width: 100%;
    height: 100%;
    object-fit: contain;
    display: block;
  }

  /* Enhanced Magnetic Effect Styles - Pure CSS magnetic attraction illusion */
  /* This creates a visual "pull" effect on hover without JavaScript cursor tracking */
  .magnetic-base {
    /* Enable smooth transitions for magnetic effect */
    transition:
      transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1),
      filter 0.2s ease-out,
      background 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    /* Hint browser for transform optimization */
    will-change: transform;
    /* Always have a subtle blue glow as base state to avoid color transition artifacts */
    filter: drop-shadow(0 0px 0px oklch(37.85% 0.1954 263.23 / 0));
  }

  /* Magnetic hover creates illusion of being "pulled" toward cursor */
  /* Use drop-shadow instead of box-shadow to properly respect border-radius */
  /* Mobile-first: reduced glow on mobile (8px blur) */
  .magnetic-base:hover:not(.magnetic-selected) {
    transform: scale(1);
    filter: drop-shadow(0 2px 8px oklch(37.85% 0.1954 263.23 / 0.25));
  }

  /* Desktop: apply scale effect and larger glow on md breakpoint and larger */
  @media (min-width: 768px) {
    .magnetic-base:hover:not(.magnetic-selected) {
      transform: scale(1.05);
      filter: drop-shadow(0 12px 32px oklch(37.85% 0.1954 263.23 / 0.35));
    }
  }

  /* Input-specific hover styling */
  .magnetic-input:hover:not(.magnetic-selected) {
    border-color: oklch(37.85% 0.1954 263.23 / 0.4);
  }

  /* Respect reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .magnetic-base {
      transition: none;
    }
  }

  /* StackCloud Component Styles */
  .stack-cloud-wrapper {
    width: 100%;
    aspect-ratio: 1;
    min-height: 400px;
    max-height: 600px;
    position: relative;
  }

  .stack-cloud-svg {
    width: 100%;
    height: 100%;
    display: block;
    overflow: visible;
    /* Hint browser for smooth opacity transitions */
    will-change: opacity;
    /* Prevent text selection on rapid clicks while maintaining keyboard accessibility */
    user-select: none;
    -webkit-user-select: none;
    -webkit-touch-callout: none;
  }

  /* Stack Node States - use CSS classes instead of inline styles for performance */
  .stack-node {
    cursor: pointer;
    /* NO transition on transform - controlled by D3 simulation */
    /* Hint browser to prepare for transform changes */
    will-change: transform;
  }

  .stack-node.prefers-reduced-motion {
    transition: none;
  }

  .stack-node-circle {
    transition:
      stroke-width 0.2s ease-out,
      stroke 0.2s ease-out,
      filter 0.2s ease-out;
    /* Hint browser for composite layers */
    will-change: filter;
  }

  .stack-node-circle.prefers-reduced-motion {
    transition: none;
  }

  /* Balanced elevation on hover/selection for depth perception (WCAG 2.2 multi-modal feedback) */
  .stack-node-circle.is-highlighted:not(.forced-colors) {
    filter: drop-shadow(0 2px 5px rgba(0, 0, 0, 0.12));
  }

  .stack-node-circle.is-selected:not(.forced-colors) {
    filter: drop-shadow(0 4px 10px rgba(0, 0, 0, 0.18));
  }

  /* Remove drop shadows for reduced motion and forced colors */
  .stack-node-circle.prefers-reduced-motion,
  .stack-node-circle.forced-colors {
    filter: none !important;
  }

  .stack-node-icon {
    pointer-events: none;
    transition:
      opacity 0.2s ease-out,
      color 0.2s ease-out;
  }

  .stack-node-icon.prefers-reduced-motion {
    transition: none;
  }

  .stack-node-focus-ring {
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .stack-node-focus-ring.prefers-reduced-motion {
    transition: none;
  }

  .stack-node:focus-visible .stack-node-focus-ring {
    opacity: 1;
  }

  /* Pie segment states */
  .pie-segment {
    transition:
      opacity 0.2s ease,
      d 0.2s ease;
  }

  .pie-segment.prefers-reduced-motion {
    transition: none;
  }

  .pie-segment-hit-area {
    cursor: pointer;
  }

  .pie-segment-hit-area:focus-visible {
    outline: 3px solid oklch(45% 0.15 260);
    outline-offset: 2px;
  }

  .pie-segment-hit-area.forced-colors:focus-visible {
    outline-color: CanvasText;
  }

  /* Forced colors mode adjustments */
  @media (forced-colors: active) {
    .stack-node-circle,
    .pie-segment-hit-area {
      forced-color-adjust: auto;
    }
  }

  /* Loading Spinner Animations */
  .spinner-ring-container {
    transform-origin: 50px 50px;
    animation: spinner-rotate-smooth 2.5s cubic-bezier(0.4, 0, 0.2, 1) infinite;
  }

  .spinner-ring-segment {
    /* Individual segments grow and shrink for fluid motion */
    animation: spinner-segment-pulse 2s ease-in-out infinite;
  }

  @media (prefers-reduced-motion: reduce) {
    .spinner-ring-container {
      animation: spinner-rotate-smooth 5s linear infinite;
    }

    .spinner-ring-segment {
      animation: none;
    }
  }
}

@keyframes animationIconIn {
  0% {
    opacity: 0;
    transform: scale(0.8);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

/* Ring component optimizations - circle always visible */
.ring-element {
  /* Circle is always visible */
  opacity: 1;
}

/* Icon inside ring - animates in with spring effect */
.ring-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;

  /* Default hidden state */
  opacity: 0;
  transform: scale(0.8);

  /* Spring effect configuration */
  --_spring-easing: cubic-bezier(0.34, 1.56, 0.64, 1);
  --_spring-duration: 145ms;

  /* Apply spring transition */
  @media (prefers-reduced-motion: no-preference) {
    transition:
      opacity var(--_spring-duration) var(--_spring-easing),
      transform var(--_spring-duration) var(--_spring-easing);
  }

  /* Progressive enhancement to linear() spring easing */
  @supports (animation-timing-function: linear(0, 0.1, 1)) {
    --_spring-easing: linear(
      0,
      0.25 19%,
      0.43 29%,
      0.66,
      0.86 71%,
      0.97 85%,
      1
    );
    --_spring-duration: 1s;
  }
}

/* When icon comes into view */
.ring-icon.ring-icon-visible {
  opacity: 1;
  transform: scale(1);
}

@keyframes animationFadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 100;
  }
}

@keyframes animation-slide-down {
  from {
    transform: translateY(-100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes float-subtle {
  0%,
  100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-2px);
  }
}

@keyframes spinner-rotate-smooth {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes spinner-segment-pulse {
  0%,
  100% {
    stroke-dasharray: var(--dash-base) var(--dash-gap);
    opacity: 0.85;
  }
  50% {
    stroke-dasharray: var(--dash-expanded) var(--dash-gap-shrink);
    opacity: 1;
  }
}

@keyframes magnetic-pulse {
  0%,
  100% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(0, 47, 167, 0.3);
  }
  50% {
    transform: scale(1.05);
    box-shadow: 0 0 0 8px rgba(0, 47, 167, 0);
  }
}

@keyframes magnetic-bounce {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

/* ViewTransition animations for projects list */
@keyframes vt-project-exit-old {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-100px);
  }
}

@keyframes vt-project-exit-new {
  from {
    opacity: 0;
    transform: translateY(100px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes vt-project-enter-old {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(100px);
  }
}

@keyframes vt-project-enter-new {
  from {
    opacity: 0;
    transform: translateY(-100px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes vt-project-stay {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(1.02);
  }
}

@keyframes vt-empty-state-old {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(100px);
  }
}

@keyframes vt-empty-state-new {
  from {
    opacity: 0;
    transform: translateY(-100px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Fade out snapshots quickly during two-phase transition */
@keyframes vt-snapshot-fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@layer utilities {
  .animation-ring {
    animation: animationRing 1s ease-in-out;
  }
  .animation-fade-in {
    animation: animationFadeIn 1s ease-out forwards;
  }
  .animation-slide-down {
    animation: animationSlideDown 0.5s ease-in-out forwards;
  }
  .animation-float-subtle {
    animation: float-subtle 4s ease-in-out infinite;
  }
  .animation-magnetic-pulse {
    animation: magnetic-pulse 2s ease-in-out infinite;
  }
  /* Animation only applies on desktop - mobile search input takes full width so no bounce needed */
  .animation-magnetic-bounce {
    animation: none;
  }

  @media (min-width: 768px) {
    .animation-magnetic-bounce {
      animation: magnetic-bounce 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
    }
  }

  .svg-contain {
    width: 100%;
    height: 100%;
    object-fit: contain;
    display: block;
  }

  /* ViewTransition animations for projects list */
  /* Each project gets a unique transition name that includes both ID and state */
  /* This ensures uniqueness required by View Transitions API */
  [style*="--vt-project-name"] {
    view-transition-name: var(--vt-project-name);
  }

  .vt-empty-state {
    view-transition-name: projects-empty-state;
  }
}

/* ViewTransition animations for projects list */
/* Two-phase approach: exit animations first, then enter animations */

/* EXIT PHASE: Animate out old snapshots of exiting projects */
/* These are ::view-transition-old() snapshots - static rasterized versions */
::view-transition-old(project-PROJECT_0-exit),
::view-transition-old(project-PROJECT_1-exit),
::view-transition-old(project-PROJECT_2-exit),
::view-transition-old(project-PROJECT_3-exit),
::view-transition-old(project-PROJECT_4-exit),
::view-transition-old(project-PROJECT_5-exit),
::view-transition-old(project-PROJECT_6-exit),
::view-transition-old(project-PROJECT_7-exit),
::view-transition-old(project-PROJECT_8-exit),
::view-transition-old(project-PROJECT_9-exit),
::view-transition-old(project-PROJECT_10-exit) {
  animation: 400ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
  animation-name: vt-project-exit-old;
}

/* Stay/Enter projects fade old snapshot quickly (they stay in new state) */
::view-transition-old(project-PROJECT_0-stay),
::view-transition-old(project-PROJECT_0-enter),
::view-transition-old(project-PROJECT_1-stay),
::view-transition-old(project-PROJECT_1-enter),
::view-transition-old(project-PROJECT_2-stay),
::view-transition-old(project-PROJECT_2-enter),
::view-transition-old(project-PROJECT_3-stay),
::view-transition-old(project-PROJECT_3-enter),
::view-transition-old(project-PROJECT_4-stay),
::view-transition-old(project-PROJECT_4-enter),
::view-transition-old(project-PROJECT_5-stay),
::view-transition-old(project-PROJECT_5-enter),
::view-transition-old(project-PROJECT_6-stay),
::view-transition-old(project-PROJECT_6-enter),
::view-transition-old(project-PROJECT_7-stay),
::view-transition-old(project-PROJECT_7-enter),
::view-transition-old(project-PROJECT_8-stay),
::view-transition-old(project-PROJECT_8-enter),
::view-transition-old(project-PROJECT_9-stay),
::view-transition-old(project-PROJECT_9-enter),
::view-transition-old(project-PROJECT_10-stay),
::view-transition-old(project-PROJECT_10-enter) {
  animation: 50ms ease-out forwards;
  animation-name: vt-snapshot-fade-out;
}

/* ENTER PHASE: Animate in new live DOM elements with staggered timing */
/* Delay ensures enter animations start after exit animations complete */
/* For enter animations, start hidden and slide in */
::view-transition-new(project-PROJECT_0-enter),
::view-transition-new(project-PROJECT_1-enter),
::view-transition-new(project-PROJECT_2-enter),
::view-transition-new(project-PROJECT_3-enter),
::view-transition-new(project-PROJECT_4-enter),
::view-transition-new(project-PROJECT_5-enter),
::view-transition-new(project-PROJECT_6-enter),
::view-transition-new(project-PROJECT_7-enter),
::view-transition-new(project-PROJECT_8-enter),
::view-transition-new(project-PROJECT_9-enter),
::view-transition-new(project-PROJECT_10-enter) {
  animation: 400ms cubic-bezier(0.4, 0, 0.2, 1) both;
  animation-name: vt-project-enter-new;
  animation-delay: 400ms;
}

/* For stay animations, keep them visible during transition */
::view-transition-new(project-PROJECT_0-stay),
::view-transition-new(project-PROJECT_1-stay),
::view-transition-new(project-PROJECT_2-stay),
::view-transition-new(project-PROJECT_3-stay),
::view-transition-new(project-PROJECT_4-stay),
::view-transition-new(project-PROJECT_5-stay),
::view-transition-new(project-PROJECT_6-stay),
::view-transition-new(project-PROJECT_7-stay),
::view-transition-new(project-PROJECT_8-stay),
::view-transition-new(project-PROJECT_9-stay),
::view-transition-new(project-PROJECT_10-stay) {
  animation: 400ms cubic-bezier(0.4, 0, 0.2, 1) both;
  animation-name: vt-project-enter-new;
  animation-delay: 0ms;
}

/* For exit animations, also animate the new state if needed */
::view-transition-new(project-PROJECT_0-exit),
::view-transition-new(project-PROJECT_1-exit),
::view-transition-new(project-PROJECT_2-exit),
::view-transition-new(project-PROJECT_3-exit),
::view-transition-new(project-PROJECT_4-exit),
::view-transition-new(project-PROJECT_5-exit),
::view-transition-new(project-PROJECT_6-exit),
::view-transition-new(project-PROJECT_7-exit),
::view-transition-new(project-PROJECT_8-exit),
::view-transition-new(project-PROJECT_9-exit),
::view-transition-new(project-PROJECT_10-exit) {
  animation: 400ms cubic-bezier(0.4, 0, 0.2, 1) both;
  animation-name: vt-project-exit-new;
  animation-delay: 0ms;
}

::view-transition-old(projects-empty-state),
::view-transition-new(projects-empty-state) {
  animation: 400ms cubic-bezier(0.4, 0, 0.2, 1) both;
}

::view-transition-old(projects-empty-state) {
  animation-name: vt-empty-state-old;
}

::view-transition-new(projects-empty-state) {
  animation-name: vt-empty-state-new;
  animation-delay: 0ms;
}

@layer components {
  /* Field sizing utility - allows form inputs to resize based on content */
  .field-sizing-content {
    field-sizing: content;
  }
}

@layer utilities {
  /* Projects scrollable container - allow animations to be visible */
  .projects-scrollable {
    /* Allow animations to slide in/out smoothly */
    overflow: visible;
  }

  /* Project List Sliding Transitions - Pure CSS + FLIP */
  /* Uses LCS algorithm + Manual FLIP for intelligent animations */

  /* Project item base */
  .project-item {
    /* Ensure proper stacking and no overlap */
    position: relative;
    isolation: isolate;

    /* Allow animations to overflow smoothly */
    overflow: visible;
  }

  /* Projects are visible by default during View Transitions */
  /* The View Transitions API handles the animation between old and new states */

  /* Items entering FROM TOP with stacked positioning and cross-fade */
  /* Mobile: smaller animation range to avoid overlapping header/StackCloud */
  .project-item.project-from-top {
    transform: translateY(calc(-500px - (var(--item-index, 0) * 200px)));
    opacity: 0;
  }

  /* Items entering FROM BOTTOM with stacked positioning and cross-fade */
  /* Mobile: smaller animation range */
  .project-item.project-from-bottom {
    transform: translateY(
      calc(500px + ((var(--total-items, 8) - var(--item-index, 0) - 1) * 200px))
    );
    opacity: 0;
  }

  /* Desktop: use full viewport height for animations */
  @media (min-width: 768px) {
    .project-item.project-from-top {
      transform: translateY(
        calc(-100vh - (var(--item-index, 0) * 200px) - 100px)
      );
      opacity: 0;
    }

    .project-item.project-from-bottom {
      transform: translateY(
        calc(
          100vh +
          ((var(--total-items, 8) - var(--item-index, 0) - 1) * 200px) +
          100px
        )
      );
      opacity: 0;
    }
  }

  /* Visible state */
  .project-item.project-visible {
    transform: translateY(0);
    opacity: 1;
    /* Staying items should be on top during transitions to prevent overlaps */
    z-index: 2;
  }

  /* Exiting items should be behind staying items during exit animation */
  .project-item.project-slide-out {
    z-index: 0;
  }

  /* Entering items should be between exiting (0) and staying (2) */
  .project-item.project-from-top:not(.project-slide-out),
  .project-item.project-from-bottom:not(.project-slide-out) {
    z-index: 1;
  }

  /* Fade out items should be lowest to avoid blocking view */
  .project-item.project-fade-out {
    z-index: -1;
  }

  /* Slide out animations with staggered timing */
  /* Each item exits with transition-delay = index * 50ms (set via JS) */
  /* This creates overlapping exit animations where items cascade out smoothly */
  /* Mobile: smaller animation range */
  .project-item.project-slide-out.project-from-top {
    transform: translateY(calc(-500px - (var(--item-index, 0) * 200px)));
    opacity: 0;
  }

  .project-item.project-slide-out.project-from-bottom {
    transform: translateY(
      calc(500px + ((var(--total-items, 8) - var(--item-index, 0) - 1) * 200px))
    );
    opacity: 0;
  }

  /* Desktop: use full viewport height for animations */
  @media (min-width: 768px) {
    .project-item.project-slide-out.project-from-top {
      transform: translateY(
        calc(-100vh - (var(--item-index, 0) * 200px) - 100px)
      );
      opacity: 0;
    }

    .project-item.project-slide-out.project-from-bottom {
      transform: translateY(
        calc(
          100vh +
          ((var(--total-items, 8) - var(--item-index, 0) - 1) * 200px) +
          100px
        )
      );
      opacity: 0;
    }
  }

  /* Fade out animation for items between staying items */
  /* Faster fade than slide animations to avoid blocking the view */
  .project-item.project-fade-out {
    opacity: 0;
    transform: scale(0.8);
    transition:
      opacity 0.4s ease,
      transform 0.4s ease;
  }

  /* Bump animation for items that stay in same position */
  .project-bump {
    animation: project-bump 0.4s ease-out;
  }

  @keyframes project-bump {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.02);
    }
    100% {
      transform: scale(1);
    }
  }

  /* Empty state slide animation - treat as special transition item */
  .empty-state-container {
    opacity: 0;
    transform: translateY(
      calc(500px + ((var(--total-items, 8) - 0 - 1) * 200px))
    );
    transition:
      opacity 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94),
      transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .empty-state-container.visible {
    opacity: 1;
    transform: translateY(0);
  }

  /* Projects exiting as empty state shows - slide up */
  .empty-state-container.slide-in {
    animation: none;
  }

  /* Accessibility: Respect user's motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .project-item {
      transition: opacity 0.3s ease;
      transform: translateY(0) !important;
    }

    .project-item:not(.project-visible) {
      opacity: 0;
    }

    .project-item.project-visible {
      opacity: 1;
    }

    .project-item.project-slide-out,
    .project-item.project-fade-out {
      opacity: 0;
    }

    .project-bump {
      animation: none;
    }

    .empty-state-container {
      transition: opacity 0.3s ease;
      transform: translateY(0) !important;
    }

    .empty-state-container:not(.visible) {
      opacity: 0;
    }

    .empty-state-container.visible {
      opacity: 1;
    }
  }
}
